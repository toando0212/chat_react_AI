import streamlit as st
from pymongo import MongoClient
import os

def get_secret(key):
    try:
        if hasattr(st, "secrets") and key in st.secrets:
            return st.secrets[key]
    except:
        pass
    
    try:
        from dotenv import load_dotenv
        load_dotenv()
        return os.getenv(key)
    except:
        pass
    
    return None

@st.cache_resource
def test_mongo():
    try:
        uri = get_secret("MONGODB_URI")
        if not uri:
            st.error("‚ùå Kh√¥ng t√¨m th·∫•y MONGODB_URI")
            return False
            
        client = MongoClient(uri, serverSelectionTimeoutMS=5000)
        
        # Test ping
        client.admin.command('ping')
        st.success("‚úÖ Ping th√†nh c√¥ng!")
        
        # Test truy c·∫≠p database
        db = client.get_default_database()
        if db is not None:
            st.write(f"‚úÖ Database: {db.name}")
        else:
            st.warning("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y database m·∫∑c ƒë·ªãnh")
            # Th·ª≠ database c·ª• th·ªÉ
            db = client["chatcodeai"]
            if db is not None:
                st.write(f"‚úÖ Database: {db.name}")
            else:
                st.error("‚ùå Kh√¥ng th·ªÉ truy c·∫≠p database")

        # Test collection
        try:
            collection = db["normalized"]
            count = collection.estimated_document_count()
            st.write(f"‚úÖ Collection c√≥ {count} documents")
        except Exception as e:
            st.error(f"‚ùå L·ªói truy c·∫≠p collection: {e}")
            # Li·ªát k√™ collections
            try:
                collections = db.list_collection_names()
                st.write(f"üìö C√°c collections c√≥ s·∫µn: {collections}")
            except:
                pass
        
        return True
    except Exception as e:
        st.error(f"‚ùå L·ªói k·∫øt n·ªëi MongoDB: {str(e)}")
        return False

# Giao di·ªán Streamlit
st.title("üîç Test k·∫øt n·ªëi MongoDB")

uri = get_secret("MONGODB_URI")
if uri:
    st.info("‚úÖ ƒê√£ t√¨m th·∫•y MONGODB_URI")
    st.write("URI (·∫©n m·∫≠t kh·∫©u):", uri.split("@")[0] + "@****")
else:
    st.error("‚ùå Kh√¥ng t√¨m th·∫•y MONGODB_URI")

if st.button("üß™ Test k·∫øt n·ªëi MongoDB"):
    test_mongo()